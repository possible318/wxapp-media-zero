// Code generated by goctl. DO NOT EDIT!
// Source: photos.proto

package pics

import (
	"context"

	"media-zero/service/photos/rpc/photo"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PicsReq = photo.PicsReq
	PicsRes = photo.PicsRes

	Pics interface {
		Pics(ctx context.Context, in *PicsReq, opts ...grpc.CallOption) (*PicsRes, error)
	}

	defaultPics struct {
		cli zrpc.Client
	}
)

func NewPics(cli zrpc.Client) Pics {
	return &defaultPics{
		cli: cli,
	}
}

func (m *defaultPics) Pics(ctx context.Context, in *PicsReq, opts ...grpc.CallOption) (*PicsRes, error) {
	client := photo.NewPicsClient(m.cli.Conn())
	return client.Pics(ctx, in, opts...)
}
